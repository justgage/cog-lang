*  Senior Project 
** Decissions / Questions?
*** How Pure to be?
*** How am I going to execute this crap?
**** Strieght OCaml :thisone:
**** Convert to some other language?
Is this legit? or does it go against what I said to do?
***** JS
***** Clojure
***** C?
** Tokenizer
*** TODO Change how Functions look?                                   :EXTRA:
*** TODO Make Type checker not have catchall                         :DEBT:
*** Remove "Display" from everywhere                                   :DEBT: 
** Pratt Parser
*** DONE Lists Parse
CLOSED: [2015-09-04 Fri 07:22]
:PROPERTIES:
:Effort:
:END:
:LOGBOOK:
CLOCK: [2015-09-03 Thu 21:02]--[2015-09-03 Thu 21:27] =>  0:25
:END:
**** Make it turn into a real list :debt:
*** DONE Fix broken "If statements" (match many)
CLOSED: [2015-09-07 Mon 11:05]
**** Looks like it broke in adding lists?
*** TODO Function Run 
***** TODO Parse them 
***** TODO Parse Arguments
*** TODO Function Define
*** TODO Repeat
*** TODO Functions
*** TODO Until :EXTRA:
*** TODO Make List a list :DEBT:
** Executor (Requirements):
*** Meta
**** How to store state?
***** Map that's passed along
***** Monad? <- most likely
**** How to deal with stuff that doesn't type check :P
***** Polymorphic functions?
***** Just throw errors <- Most likely
*** TODO Be able to print primitives
**** Float
**** String
**** List
*** TODO If statements
*** TODO Store in a variable
*** TODO Repeat statements
*** TODO Define and run functions
*** TODO ==, <, <=, >= for floats
*** TODO Equality for Lists
*** TODO Equality for strings
*** TODO Boolean
**** Negate
**** And
**** Or
*** TODO Be able to parse and execute in 1 second
*** TODO MAYBE: debug mode :maybe
** Tech Debt:
*** TODO nud to use is_more_tokens :DEBT:                              :DEBT: 
*** TODO Convert lbp/rbp to using Result
**** NOTE: this may require to store lbp/rbp in the monad.
which may be less clean!
